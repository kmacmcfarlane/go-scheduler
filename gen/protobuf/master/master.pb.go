// Code generated by protoc-gen-go. DO NOT EDIT.
// source: protobuf/master/master.proto

package master

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type StartRequest struct {
	DockerImage          string   `protobuf:"bytes,1,opt,name=dockerImage,proto3" json:"dockerImage,omitempty"`
	JobName              string   `protobuf:"bytes,2,opt,name=jobName,proto3" json:"jobName,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StartRequest) Reset()         { *m = StartRequest{} }
func (m *StartRequest) String() string { return proto.CompactTextString(m) }
func (*StartRequest) ProtoMessage()    {}
func (*StartRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_cc3a3ace9647fdbe, []int{0}
}

func (m *StartRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StartRequest.Unmarshal(m, b)
}
func (m *StartRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StartRequest.Marshal(b, m, deterministic)
}
func (m *StartRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StartRequest.Merge(m, src)
}
func (m *StartRequest) XXX_Size() int {
	return xxx_messageInfo_StartRequest.Size(m)
}
func (m *StartRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_StartRequest.DiscardUnknown(m)
}

var xxx_messageInfo_StartRequest proto.InternalMessageInfo

func (m *StartRequest) GetDockerImage() string {
	if m != nil {
		return m.DockerImage
	}
	return ""
}

func (m *StartRequest) GetJobName() string {
	if m != nil {
		return m.JobName
	}
	return ""
}

type StopRequest struct {
	JobName              string   `protobuf:"bytes,1,opt,name=jobName,proto3" json:"jobName,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StopRequest) Reset()         { *m = StopRequest{} }
func (m *StopRequest) String() string { return proto.CompactTextString(m) }
func (*StopRequest) ProtoMessage()    {}
func (*StopRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_cc3a3ace9647fdbe, []int{1}
}

func (m *StopRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StopRequest.Unmarshal(m, b)
}
func (m *StopRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StopRequest.Marshal(b, m, deterministic)
}
func (m *StopRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StopRequest.Merge(m, src)
}
func (m *StopRequest) XXX_Size() int {
	return xxx_messageInfo_StopRequest.Size(m)
}
func (m *StopRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_StopRequest.DiscardUnknown(m)
}

var xxx_messageInfo_StopRequest proto.InternalMessageInfo

func (m *StopRequest) GetJobName() string {
	if m != nil {
		return m.JobName
	}
	return ""
}

type QueryRequest struct {
	JobName              string   `protobuf:"bytes,1,opt,name=jobName,proto3" json:"jobName,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *QueryRequest) Reset()         { *m = QueryRequest{} }
func (m *QueryRequest) String() string { return proto.CompactTextString(m) }
func (*QueryRequest) ProtoMessage()    {}
func (*QueryRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_cc3a3ace9647fdbe, []int{2}
}

func (m *QueryRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QueryRequest.Unmarshal(m, b)
}
func (m *QueryRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QueryRequest.Marshal(b, m, deterministic)
}
func (m *QueryRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryRequest.Merge(m, src)
}
func (m *QueryRequest) XXX_Size() int {
	return xxx_messageInfo_QueryRequest.Size(m)
}
func (m *QueryRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryRequest.DiscardUnknown(m)
}

var xxx_messageInfo_QueryRequest proto.InternalMessageInfo

func (m *QueryRequest) GetJobName() string {
	if m != nil {
		return m.JobName
	}
	return ""
}

type LogRequest struct {
	JobName              string   `protobuf:"bytes,1,opt,name=jobName,proto3" json:"jobName,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LogRequest) Reset()         { *m = LogRequest{} }
func (m *LogRequest) String() string { return proto.CompactTextString(m) }
func (*LogRequest) ProtoMessage()    {}
func (*LogRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_cc3a3ace9647fdbe, []int{3}
}

func (m *LogRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LogRequest.Unmarshal(m, b)
}
func (m *LogRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LogRequest.Marshal(b, m, deterministic)
}
func (m *LogRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LogRequest.Merge(m, src)
}
func (m *LogRequest) XXX_Size() int {
	return xxx_messageInfo_LogRequest.Size(m)
}
func (m *LogRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_LogRequest.DiscardUnknown(m)
}

var xxx_messageInfo_LogRequest proto.InternalMessageInfo

func (m *LogRequest) GetJobName() string {
	if m != nil {
		return m.JobName
	}
	return ""
}

type StartResponse struct {
	Error                string   `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StartResponse) Reset()         { *m = StartResponse{} }
func (m *StartResponse) String() string { return proto.CompactTextString(m) }
func (*StartResponse) ProtoMessage()    {}
func (*StartResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_cc3a3ace9647fdbe, []int{4}
}

func (m *StartResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StartResponse.Unmarshal(m, b)
}
func (m *StartResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StartResponse.Marshal(b, m, deterministic)
}
func (m *StartResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StartResponse.Merge(m, src)
}
func (m *StartResponse) XXX_Size() int {
	return xxx_messageInfo_StartResponse.Size(m)
}
func (m *StartResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_StartResponse.DiscardUnknown(m)
}

var xxx_messageInfo_StartResponse proto.InternalMessageInfo

func (m *StartResponse) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

type StopResponse struct {
	Error                string   `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StopResponse) Reset()         { *m = StopResponse{} }
func (m *StopResponse) String() string { return proto.CompactTextString(m) }
func (*StopResponse) ProtoMessage()    {}
func (*StopResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_cc3a3ace9647fdbe, []int{5}
}

func (m *StopResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StopResponse.Unmarshal(m, b)
}
func (m *StopResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StopResponse.Marshal(b, m, deterministic)
}
func (m *StopResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StopResponse.Merge(m, src)
}
func (m *StopResponse) XXX_Size() int {
	return xxx_messageInfo_StopResponse.Size(m)
}
func (m *StopResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_StopResponse.DiscardUnknown(m)
}

var xxx_messageInfo_StopResponse proto.InternalMessageInfo

func (m *StopResponse) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

type QueryResponse struct {
	Error                string   `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	Status               string   `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *QueryResponse) Reset()         { *m = QueryResponse{} }
func (m *QueryResponse) String() string { return proto.CompactTextString(m) }
func (*QueryResponse) ProtoMessage()    {}
func (*QueryResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_cc3a3ace9647fdbe, []int{6}
}

func (m *QueryResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QueryResponse.Unmarshal(m, b)
}
func (m *QueryResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QueryResponse.Marshal(b, m, deterministic)
}
func (m *QueryResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryResponse.Merge(m, src)
}
func (m *QueryResponse) XXX_Size() int {
	return xxx_messageInfo_QueryResponse.Size(m)
}
func (m *QueryResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryResponse.DiscardUnknown(m)
}

var xxx_messageInfo_QueryResponse proto.InternalMessageInfo

func (m *QueryResponse) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

func (m *QueryResponse) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

type LogResponse struct {
	Error                string   `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	LogMessages          string   `protobuf:"bytes,2,opt,name=logMessages,proto3" json:"logMessages,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LogResponse) Reset()         { *m = LogResponse{} }
func (m *LogResponse) String() string { return proto.CompactTextString(m) }
func (*LogResponse) ProtoMessage()    {}
func (*LogResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_cc3a3ace9647fdbe, []int{7}
}

func (m *LogResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LogResponse.Unmarshal(m, b)
}
func (m *LogResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LogResponse.Marshal(b, m, deterministic)
}
func (m *LogResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LogResponse.Merge(m, src)
}
func (m *LogResponse) XXX_Size() int {
	return xxx_messageInfo_LogResponse.Size(m)
}
func (m *LogResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_LogResponse.DiscardUnknown(m)
}

var xxx_messageInfo_LogResponse proto.InternalMessageInfo

func (m *LogResponse) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

func (m *LogResponse) GetLogMessages() string {
	if m != nil {
		return m.LogMessages
	}
	return ""
}

func init() {
	proto.RegisterType((*StartRequest)(nil), "master.StartRequest")
	proto.RegisterType((*StopRequest)(nil), "master.StopRequest")
	proto.RegisterType((*QueryRequest)(nil), "master.QueryRequest")
	proto.RegisterType((*LogRequest)(nil), "master.LogRequest")
	proto.RegisterType((*StartResponse)(nil), "master.StartResponse")
	proto.RegisterType((*StopResponse)(nil), "master.StopResponse")
	proto.RegisterType((*QueryResponse)(nil), "master.QueryResponse")
	proto.RegisterType((*LogResponse)(nil), "master.LogResponse")
}

func init() { proto.RegisterFile("protobuf/master/master.proto", fileDescriptor_cc3a3ace9647fdbe) }

var fileDescriptor_cc3a3ace9647fdbe = []byte{
	// 343 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x92, 0x4f, 0x4f, 0xc2, 0x40,
	0x10, 0xc5, 0xa9, 0x4a, 0x8d, 0x53, 0xb8, 0x2c, 0x68, 0x08, 0xf1, 0x40, 0x1a, 0xff, 0x70, 0x91,
	0x1a, 0x48, 0x48, 0x8c, 0xf1, 0x62, 0xe2, 0x41, 0x03, 0x26, 0xc2, 0xcd, 0xdb, 0xb6, 0x0c, 0x8b,
	0x42, 0x19, 0xdc, 0xdd, 0x1e, 0xfc, 0xb8, 0x7e, 0x13, 0xc3, 0xb2, 0xa5, 0x2d, 0x07, 0x38, 0x35,
	0xf3, 0xf6, 0x37, 0x3b, 0xf3, 0xf6, 0x15, 0x2e, 0x57, 0x92, 0x34, 0x85, 0xc9, 0x34, 0x88, 0xb9,
	0xd2, 0x28, 0xed, 0xa7, 0x63, 0x64, 0xe6, 0x6e, 0x2a, 0xff, 0x0d, 0x2a, 0x63, 0xcd, 0xa5, 0x1e,
	0xe1, 0x4f, 0x82, 0x4a, 0xb3, 0x16, 0x78, 0x13, 0x8a, 0xe6, 0x28, 0x5f, 0x63, 0x2e, 0xb0, 0xe1,
	0xb4, 0x9c, 0xf6, 0xd9, 0x28, 0x2f, 0xb1, 0x06, 0x9c, 0x7e, 0x53, 0xf8, 0xce, 0x63, 0x6c, 0x1c,
	0x99, 0xd3, 0xb4, 0xf4, 0x6f, 0xc1, 0x1b, 0x6b, 0x5a, 0xa5, 0x57, 0xe5, 0x40, 0xa7, 0x08, 0xb6,
	0xa1, 0xf2, 0x91, 0xa0, 0xfc, 0x3d, 0x4c, 0xde, 0x00, 0x0c, 0x48, 0x1c, 0xe6, 0xae, 0xa1, 0x6a,
	0x6d, 0xa8, 0x15, 0x2d, 0x15, 0xb2, 0x3a, 0x94, 0x51, 0x4a, 0x92, 0x16, 0xdc, 0x14, 0xfe, 0xd5,
	0xda, 0xed, 0x7a, 0xc3, 0xbd, 0xd4, 0x13, 0x54, 0xed, 0x7a, 0xfb, 0x30, 0x76, 0x01, 0xae, 0xd2,
	0x5c, 0x27, 0xca, 0xbe, 0x83, 0xad, 0xfc, 0x17, 0xf0, 0xcc, 0xce, 0x7b, 0x9b, 0x5b, 0xe0, 0x2d,
	0x48, 0x0c, 0x51, 0x29, 0x2e, 0x30, 0xbd, 0x21, 0x2f, 0x75, 0xff, 0x1c, 0x70, 0x87, 0x26, 0x24,
	0xd6, 0x87, 0xb2, 0x71, 0xc7, 0xea, 0x1d, 0x1b, 0x62, 0x3e, 0xb3, 0xe6, 0xf9, 0x8e, 0xba, 0x19,
	0xec, 0x97, 0x58, 0x0f, 0x4e, 0xd6, 0x76, 0x59, 0x2d, 0x03, 0xb6, 0xf1, 0x34, 0xeb, 0x45, 0x71,
	0xdb, 0xd4, 0x87, 0xb2, 0x71, 0x9f, 0x0d, 0xcb, 0x67, 0x95, 0x0d, 0x2b, 0x3c, 0x91, 0x5f, 0x62,
	0x5d, 0x38, 0x1e, 0x90, 0x60, 0x2c, 0x3d, 0xcf, 0x72, 0x6b, 0xd6, 0x0a, 0x5a, 0xda, 0x71, 0xef,
	0x3c, 0x3f, 0x7e, 0x3e, 0x88, 0x2f, 0x3d, 0x4b, 0xc2, 0x4e, 0x44, 0x71, 0x30, 0x8f, 0x79, 0x14,
	0x47, 0x53, 0x2e, 0x17, 0x7c, 0x89, 0x81, 0xa0, 0x3b, 0x15, 0xcd, 0x70, 0x92, 0x2c, 0x50, 0x06,
	0x02, 0x97, 0xc1, 0xce, 0xff, 0x1c, 0xba, 0x46, 0xe8, 0xfd, 0x07, 0x00, 0x00, 0xff, 0xff, 0x5c,
	0xdf, 0xe3, 0x1e, 0xe9, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MasterClient is the client API for Master service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MasterClient interface {
	Start(ctx context.Context, in *StartRequest, opts ...grpc.CallOption) (*StartResponse, error)
	Stop(ctx context.Context, in *StopRequest, opts ...grpc.CallOption) (*StopResponse, error)
	Query(ctx context.Context, in *QueryRequest, opts ...grpc.CallOption) (*QueryResponse, error)
	Log(ctx context.Context, in *LogRequest, opts ...grpc.CallOption) (Master_LogClient, error)
}

type masterClient struct {
	cc *grpc.ClientConn
}

func NewMasterClient(cc *grpc.ClientConn) MasterClient {
	return &masterClient{cc}
}

func (c *masterClient) Start(ctx context.Context, in *StartRequest, opts ...grpc.CallOption) (*StartResponse, error) {
	out := new(StartResponse)
	err := c.cc.Invoke(ctx, "/master.Master/Start", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *masterClient) Stop(ctx context.Context, in *StopRequest, opts ...grpc.CallOption) (*StopResponse, error) {
	out := new(StopResponse)
	err := c.cc.Invoke(ctx, "/master.Master/Stop", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *masterClient) Query(ctx context.Context, in *QueryRequest, opts ...grpc.CallOption) (*QueryResponse, error) {
	out := new(QueryResponse)
	err := c.cc.Invoke(ctx, "/master.Master/Query", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *masterClient) Log(ctx context.Context, in *LogRequest, opts ...grpc.CallOption) (Master_LogClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Master_serviceDesc.Streams[0], "/master.Master/Log", opts...)
	if err != nil {
		return nil, err
	}
	x := &masterLogClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Master_LogClient interface {
	Recv() (*LogResponse, error)
	grpc.ClientStream
}

type masterLogClient struct {
	grpc.ClientStream
}

func (x *masterLogClient) Recv() (*LogResponse, error) {
	m := new(LogResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// MasterServer is the server API for Master service.
type MasterServer interface {
	Start(context.Context, *StartRequest) (*StartResponse, error)
	Stop(context.Context, *StopRequest) (*StopResponse, error)
	Query(context.Context, *QueryRequest) (*QueryResponse, error)
	Log(*LogRequest, Master_LogServer) error
}

func RegisterMasterServer(s *grpc.Server, srv MasterServer) {
	s.RegisterService(&_Master_serviceDesc, srv)
}

func _Master_Start_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StartRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MasterServer).Start(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/master.Master/Start",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MasterServer).Start(ctx, req.(*StartRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Master_Stop_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StopRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MasterServer).Stop(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/master.Master/Stop",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MasterServer).Stop(ctx, req.(*StopRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Master_Query_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MasterServer).Query(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/master.Master/Query",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MasterServer).Query(ctx, req.(*QueryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Master_Log_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(LogRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(MasterServer).Log(m, &masterLogServer{stream})
}

type Master_LogServer interface {
	Send(*LogResponse) error
	grpc.ServerStream
}

type masterLogServer struct {
	grpc.ServerStream
}

func (x *masterLogServer) Send(m *LogResponse) error {
	return x.ServerStream.SendMsg(m)
}

var _Master_serviceDesc = grpc.ServiceDesc{
	ServiceName: "master.Master",
	HandlerType: (*MasterServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Start",
			Handler:    _Master_Start_Handler,
		},
		{
			MethodName: "Stop",
			Handler:    _Master_Stop_Handler,
		},
		{
			MethodName: "Query",
			Handler:    _Master_Query_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Log",
			Handler:       _Master_Log_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "protobuf/master/master.proto",
}
